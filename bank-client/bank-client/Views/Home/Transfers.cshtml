@model bank_client.Models.MultiModel
@{
    ViewBag.Title = "Transfers";
  
}
<div class="slim-mainpanel">
    <div class="container">
        <div class="manager-header">
            <div class="slim-pageheader">
                <ol class="breadcrumb slim-breadcrumb">
                    <li class="breadcrumb-item active"><a href="#">Home</a></li>
                    <li class="breadcrumb-item"><a href="#">Chuyển Tiền</a></li>
                </ol>
                <h6 class="slim-pagetitle">Chuyển Tiền Nhanh 24/7</h6>
            </div><!-- slim-pageheader -->
            <a id="managerNavicon" href="" class="contact-navicon"><i class="icon ion-navicon-round"></i></a>
        </div><!-- manager-header -->
        <div class="row">
            <div class="col-md-4">
                <div class="section-wrapper">
                    <label class="section-label-sm tx-gray-500">Thông Tin Tài Khoản</label>
                    <p class="invoice-info-row">
                        <span>Tên Tài Khoản</span>
                        <span>@Html.DisplayFor(m => m.accountDto.LastName) @Html.DisplayFor(m => m.accountDto.FistName)</span>
                    </p>
                    <p class="invoice-info-row">
                        <span>SỐ TK</span>
                        <span>@Html.DisplayFor(m => m.accountDto.AccountNumber)</span>
                    </p>
                    <p class="invoice-info-row">
                        <span>SỐ Du</span>
                        <span>@Html.DisplayFor(m => m.accountDto.Balance)</span>
                    </p>
                </div>
            </div>
            <div class="col-md-8">
                <div class="section-wrapper">
                    @using (Html.BeginForm())
                    {
                        @Html.AntiForgeryToken()
                    <div class="row">

                        <div class="col-md-6">
                            <div class="form-group">
                                @Html.LabelFor(model => Model.TransferDto.AccountNumberReceiver, htmlAttributes: new { @class = "control-label " })
                                @Html.EditorFor(model => model.TransferDto.AccountNumberReceiver, new { htmlAttributes = new { @Name = "AccountNumberReceiver", @class = "form-control" } })
                                @Html.ValidationMessageFor(model => model.TransferDto.AccountNumberReceiver, "", new { @class = "text-danger" })
                            </div>
                        </div>
                        <div class="col-md-6">
                            <div class="form-group">
                                @Html.LabelFor(model => model.TransferDto.FullName, htmlAttributes: new { @class = "control-label " })
                                @Html.EditorFor(model => model.TransferDto.FullName, new { htmlAttributes = new { @Name = "FullName", @class = "form-control" } })
                                @Html.ValidationMessageFor(model => model.TransferDto.FullName, "", new { @class = "text-danger" })
                            </div>
                        </div>
                        <div class="col-md-12">
                            <div class="form-group">
                                @Html.LabelFor(model => model.TransferDto.Amount, htmlAttributes: new { @class = "control-label " })
                                @Html.EditorFor(model => model.TransferDto.Amount, new { htmlAttributes = new { @Name = "Amount", @class = "form-control" } })
                                @Html.ValidationMessageFor(model => model.TransferDto.Amount, "", new { @class = "text-danger" })
                            </div>
                        </div>
                        <div class="col-md-12">
                            <div class="form-group">
                                @Html.LabelFor(model => model.TransferDto.Message, htmlAttributes: new { @class = "control-label " })
                                @Html.TextAreaFor(model => model.TransferDto.Message, new { @Name = "Message", @class = "form-control" })
                                @Html.ValidationMessageFor(model => model.TransferDto.Message, "", new { @class = "text-danger" })
                            </div>
                        </div>
                        <div class="col-md-12">
                            <div class="form-group">
                                @Html.LabelFor(model => model.TransferDto.Password, htmlAttributes: new { @class = "control-label " })
                                @Html.PasswordFor(model => model.TransferDto.Password, new { @Name = "Password", @class = "form-control" })
                                @Html.ValidationMessageFor(model => model.TransferDto.Password, "", new { @class = "text-danger" })
                            </div>
                        </div>
                        <div class="col-md-12">
                            <div class="form-group">
                                @Html.Label("OTP CODE", htmlAttributes: new { @class = "control-label " })
                                <input type="number" name="Otp" class="form-control" />
                            </div>
                            @Ajax.ActionLink(
                                "Get OTP", // <-- Text to display
                                "GetOTP",// <-- Action/Method Name
                                  "Home",//<!-- Controller Name
                                 new AjaxOptions
                                 {
                                     UpdateTargetId = "UpdateContentDiv", // <-- DOM element ID to update
                                     InsertionMode = InsertionMode.Replace, // <-- Replace the content of DOM element
                                     HttpMethod = "GET", // <-- HTTP method
                                     LoadingElementId = "divLoading", //Id of Loading GIF Image
                                     OnBegin = "onAjaxBegin", //OnBegin JS Function
                                     OnComplete = "onAjaxComplete" //OnComplete JS Function
                                 }//-- Class
                                 )
                            <div style="display:none" id="divLoading">
                                loading
                            </div>
                        </div>
                    </div>
                        <button type="submit"  class="btn btn-primary pd-x-20">CHUYỂN TIỀN</button>
                    }
                    </div>
            </div>
        </div>
    </div><!-- container -->
</div><!-- slim-mainpanel -->
