<?xml version="1.0"?>
<doc>
    <assembly>
        <name>Plugin.Iconize</name>
    </assembly>
    <members>
        <member name="T:Plugin.Iconize.IIcon">
            <summary>
            Icon represents one icon in an icon font.
            </summary>
        </member>
        <member name="P:Plugin.Iconize.IIcon.Key">
            <summary>
            The key of icon, for example 'fa-ok'
            </summary>
            <returns></returns>
        </member>
        <member name="P:Plugin.Iconize.IIcon.Character">
            <summary>
            The character matching the key in the font, for example '\u4354'
            </summary>
            <returns></returns>
        </member>
        <member name="T:Plugin.Iconize.Icon">
            <summary>
            Defines the <see cref="T:Plugin.Iconize.Icon" /> type.
            </summary>
            <seealso cref="T:Plugin.Iconize.IIcon" />
        </member>
        <member name="P:Plugin.Iconize.Icon.Character">
            <summary>
            The character matching the key in the font, for example '\u4354'
            </summary>
        </member>
        <member name="P:Plugin.Iconize.Icon.Key">
            <summary>
            The key of icon, for example 'fa-ok'
            </summary>
        </member>
        <member name="M:Plugin.Iconize.Icon.#ctor(System.String,System.Char)">
            <summary>
            Initializes a new instance of the <see cref="T:Plugin.Iconize.Icon" /> class.
            </summary>
            <param name="key">The key.</param>
            <param name="character">The character.</param>
        </member>
        <member name="T:Plugin.Iconize.IconButton">
            <summary>
            Defines the <see cref="T:Plugin.Iconize.IconButton" /> control.
            </summary>
            <seealso cref="T:Xamarin.Forms.Button" />
        </member>
        <member name="T:Plugin.Iconize.IconCarouselPage">
            <summary>
            Defines the <see cref="T:Plugin.Iconize.IconCarouselPage" /> page.
            </summary>
            <seealso cref="T:Xamarin.Forms.CarouselPage" />
        </member>
        <member name="M:Plugin.Iconize.IconCarouselPage.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Plugin.Iconize.IconCarouselPage" /> class.
            </summary>
        </member>
        <member name="M:Plugin.Iconize.IconCarouselPage.OnCurrentPageChanged(System.Object,System.EventArgs)">
            <summary>
            Called when [current page changed].
            </summary>
            <param name="sender">The sender.</param>
            <param name="e">The <see cref="T:System.EventArgs" /> instance containing the event data.</param>
        </member>
        <member name="T:Plugin.Iconize.IconImage">
            <summary>
            Defines the <see cref="T:Plugin.Iconize.IconImage" /> control.
            </summary>
            <seealso cref="T:Xamarin.Forms.Image" />
        </member>
        <member name="F:Plugin.Iconize.IconImage.AutoSize">
            <summary>
            When the property <see cref="P:Plugin.Iconize.IconImage.IconSize" /> is set to this value, the icon size will match the Image Size.
            </summary>
        </member>
        <member name="F:Plugin.Iconize.IconImage.IconProperty">
            <summary>
            Property definition for the <see cref="P:Plugin.Iconize.IconImage.Icon" /> Property
            </summary>
        </member>
        <member name="F:Plugin.Iconize.IconImage.IconColorProperty">
            <summary>
            Property definition for the <see cref="P:Plugin.Iconize.IconImage.IconColor" /> Property
            </summary>
        </member>
        <member name="F:Plugin.Iconize.IconImage.IconSizeProperty">
            <summary>
            Property definition for the <see cref="P:Plugin.Iconize.IconImage.IconSize" /> Property
            </summary>
        </member>
        <member name="P:Plugin.Iconize.IconImage.Icon">
            <summary>
            Gets or sets the icon.
            </summary>
            <value>
            The icon.
            </value>
        </member>
        <member name="P:Plugin.Iconize.IconImage.IconColor">
            <summary>
            Gets or sets the color of the icon.
            </summary>
            <value>
            The color of the icon.
            </value>
        </member>
        <member name="P:Plugin.Iconize.IconImage.IconSize">
            <summary>
            Gets or sets the size of the icon.
            </summary>
            <value>
            The size of the icon.
            </value>
        </member>
        <member name="T:Plugin.Iconize.Iconize">
            <summary>
            Defines the <see cref="T:Plugin.Iconize.Iconize" /> type.
            </summary>
        </member>
        <member name="P:Plugin.Iconize.Iconize.TabLayoutId">
            <summary>
            Gets the tab layout identifier.
            </summary>
            <value>
            The tab layout identifier.
            </value>
        </member>
        <member name="P:Plugin.Iconize.Iconize.ToolbarId">
            <summary>
            Gets the toolbar identifier.
            </summary>
            <value>
            The toolbar identifier.
            </value>
        </member>
        <member name="M:Plugin.Iconize.Iconize.Init(System.Int32,System.Int32)">
            <summary>
            Initializes the control library. android only
            </summary>
            <param name="toolbarId">The toolbar identifier.</param>
            <param name="tabLayoutId">The tab layout identifier.</param>
        </member>
        <member name="P:Plugin.Iconize.Iconize.Modules">
            <summary>
            List of icon font descriptors
            </summary>
        </member>
        <member name="M:Plugin.Iconize.Iconize.With(Plugin.Iconize.IIconModule)">
            <summary>
            Add support for a new icon font.
            </summary>
            <param name="module">The Icon Module holding the ttf file reference and its mappings.</param>
            <returns>An initializer instance for chain calls.</returns>
        </member>
        <member name="M:Plugin.Iconize.Iconize.AddModule(Plugin.Iconize.IIconModule)">
            <summary>
            Adds the icon module.
            </summary>
            <param name="module">The module.</param>
        </member>
        <member name="T:Plugin.Iconize.Iconize.IconizeInitializer">
            <summary>
            Allows chain calls on <see cref="M:Plugin.Iconize.Iconize.With(Plugin.Iconize.IIconModule)" />.
            </summary>
        </member>
        <member name="M:Plugin.Iconize.Iconize.IconizeInitializer.#ctor(Plugin.Iconize.IIconModule)">
            <summary>
            Initializes a new instance of the <see cref="T:Plugin.Iconize.Iconize.IconizeInitializer" /> class.
            </summary>
            <param name="iconFontDescriptor">The icon font descriptor.</param>
        </member>
        <member name="M:Plugin.Iconize.Iconize.IconizeInitializer.With(Plugin.Iconize.IIconModule)">
            <summary>
            Add support for a new icon font.
            </summary>
            <param name="iconFontDescriptor">The IconDescriptor holding the ttf file reference and its mappings.</param>
            <returns>An initializer instance for chain calls.</returns>
        </member>
        <member name="M:Plugin.Iconize.Iconize.FindModuleOf(Plugin.Iconize.IIcon)">
            <summary>
            Finds the Typeface to apply for a given icon.
            </summary>
            <param name="icon">The icon for which you need the typeface.</param>
            <returns>
                The font descriptor which contains info about the typeface to apply, or null
                if the icon cannot be found. In that case, check that you properly added the modules
                using <see cref="M:Plugin.Iconize.Iconize.With(Plugin.Iconize.IIconModule)" /> prior to calling this method.
            </returns>
        </member>
        <member name="M:Plugin.Iconize.Iconize.FindIconForKey(System.String)">
            <summary>
            Retrieve an icon from a key.
            </summary>
            <param name="iconKey">The icon key.</param>
            <returns>The icon, or null if no icon matches the key</returns>
        </member>
        <member name="T:Plugin.Iconize.IconizeExtensions">
            <summary>
            Global extension methods for Iconize
            </summary>
        </member>
        <member name="M:Plugin.Iconize.IconizeExtensions.Add(System.Collections.Generic.IList{Plugin.Iconize.IIcon},System.String,System.Char)">
            <summary>
            Adds the icon to the list.
            </summary>
            <param name="list">The list.</param>
            <param name="key">The key.</param>
            <param name="character">The character.</param>
        </member>
        <member name="M:Plugin.Iconize.IconizeExtensions.GetToolbarItems(Xamarin.Forms.Page)">
            <summary>
            Gets the toolbar items.
            </summary>
            <param name="page">The page.</param>
            <returns></returns>
        </member>
        <member name="T:Plugin.Iconize.IconLabel">
            <summary>
            Defines the <see cref="T:Plugin.Iconize.IconLabel" /> control.
            </summary>
            <seealso cref="T:Xamarin.Forms.Label" />
        </member>
        <member name="T:Plugin.Iconize.IIconModule">
            <summary>
            Defines the <see cref="T:Plugin.Iconize.IIconModule" /> interface.
            </summary>
        </member>
        <member name="P:Plugin.Iconize.IIconModule.Characters">
            <summary>
            The characters in the font.
            </summary>
        </member>
        <member name="P:Plugin.Iconize.IIconModule.FontFamily">
            <summary>
            Gets the font family.
            </summary>
            <value>
            The font family.
            </value>
        </member>
        <member name="P:Plugin.Iconize.IIconModule.FontName">
            <summary>
            Gets the name of the font.
            </summary>
            <value>
            The name of the font.
            </value>
        </member>
        <member name="P:Plugin.Iconize.IIconModule.FontPath">
            <summary>
            Gets the font path.
            </summary>
            <value>
            The font path.
            </value>
        </member>
        <member name="P:Plugin.Iconize.IIconModule.Keys">
            <summary>
            Gets or sets the keys.
            </summary>
            <value>
            The keys.
            </value>
        </member>
        <member name="M:Plugin.Iconize.IIconModule.GetIcon(System.String)">
            <summary>
            Gets the icon.
            </summary>
            <param name="iconKey">The icon key.</param>
            <returns></returns>
        </member>
        <member name="M:Plugin.Iconize.IIconModule.HasIcon(Plugin.Iconize.IIcon)">
            <summary>
            Determines whether the specified icon is in the set.
            </summary>
            <param name="icon">The icon.</param>
            <returns></returns>
        </member>
        <member name="T:Plugin.Iconize.IconModule">
            <summary>
            Defines the <see cref="T:Plugin.Iconize.IconModule" /> type.
            </summary>
            <seealso cref="T:Plugin.Iconize.IIconModule" />
        </member>
        <member name="P:Plugin.Iconize.IconModule.Characters">
            <summary>
            The characters in the font.
            </summary>
        </member>
        <member name="P:Plugin.Iconize.IconModule.FontFamily">
            <summary>
            Gets the font family.
            </summary>
            <value>
            The font family.
            </value>
        </member>
        <member name="P:Plugin.Iconize.IconModule.FontName">
            <summary>
            Gets the name of the font.
            </summary>
            <value>
            The name of the font.
            </value>
        </member>
        <member name="P:Plugin.Iconize.IconModule.FontPath">
            <summary>
            Gets the font path.
            </summary>
            <value>
            The font path.
            </value>
        </member>
        <member name="P:Plugin.Iconize.IconModule.Icons">
            <summary>
            Gets the icons.
            </summary>
            <value>
            The icons.
            </value>
        </member>
        <member name="P:Plugin.Iconize.IconModule.Keys">
            <summary>
            Gets or sets the keys.
            </summary>
            <value>
            The keys.
            </value>
        </member>
        <member name="M:Plugin.Iconize.IconModule.#ctor(System.String,System.String,System.String,System.Collections.Generic.IEnumerable{Plugin.Iconize.IIcon})">
            <summary>
            Initializes a new instance of the <see cref="T:Plugin.Iconize.IconModule" /> class.
            </summary>
            <param name="fontFamily">The font family.</param>
            <param name="fontName">Name of the font.</param>
            <param name="fontPath">The font path.</param>
            <param name="icons">The icons.</param>
        </member>
        <member name="M:Plugin.Iconize.IconModule.GetIcon(System.String)">
            <summary>
            Gets the icon.
            </summary>
            <param name="iconKey">The key.</param>
            <returns></returns>
        </member>
        <member name="M:Plugin.Iconize.IconModule.HasIcon(Plugin.Iconize.IIcon)">
            <summary>
            Determines whether the specified icon is in the set.
            </summary>
            <param name="icon">The icon.</param>
            <returns></returns>
        </member>
        <member name="T:Plugin.Iconize.IconNavigationPage">
            <summary>
            Defines the <see cref="T:Plugin.Iconize.IconNavigationPage" /> page.
            </summary>
            <seealso cref="T:Xamarin.Forms.NavigationPage" />
        </member>
        <member name="M:Plugin.Iconize.IconNavigationPage.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Plugin.Iconize.IconNavigationPage" /> class.
            </summary>
        </member>
        <member name="M:Plugin.Iconize.IconNavigationPage.#ctor(Xamarin.Forms.Page)">
            <summary>
            Initializes a new instance of the <see cref="T:Plugin.Iconize.IconNavigationPage" /> class.
            </summary>
            <param name="root">The root page.</param>
        </member>
        <member name="M:Plugin.Iconize.IconNavigationPage.InitListeners">
            <summary>
            Initializes the event listeners.
            </summary>
        </member>
        <member name="M:Plugin.Iconize.IconNavigationPage.OnNavigation(System.Object,Xamarin.Forms.NavigationEventArgs)">
            <summary>
            Called when [navigation].
            </summary>
            <param name="sender">The sender.</param>
            <param name="e">The <see cref="T:Xamarin.Forms.NavigationEventArgs"/> instance containing the event data.</param>
            <exception cref="T:System.NotImplementedException"></exception>
        </member>
        <member name="T:Plugin.Iconize.IconTabbedPage">
            <summary>
            Defines the <see cref="T:Plugin.Iconize.IconTabbedPage" /> page.
            </summary>
            <seealso cref="T:Xamarin.Forms.TabbedPage" />
        </member>
        <member name="M:Plugin.Iconize.IconTabbedPage.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Plugin.Iconize.IconTabbedPage" /> class.
            </summary>
        </member>
        <member name="M:Plugin.Iconize.IconTabbedPage.OnCurrentPageChanged(System.Object,System.EventArgs)">
            <summary>
            Called when [current page changed].
            </summary>
            <param name="sender">The sender.</param>
            <param name="e">The <see cref="T:System.EventArgs" /> instance containing the event data.</param>
        </member>
        <member name="T:Plugin.Iconize.IconToolbarItem">
            <summary>
            Defines the <see cref="T:Plugin.Iconize.IconToolbarItem" /> control.
            </summary>
            <seealso cref="T:Xamarin.Forms.ToolbarItem" />
        </member>
        <member name="F:Plugin.Iconize.IconToolbarItem.UpdateToolbarItemsMessage">
            <summary>
            The update toolbar items message
            </summary>
        </member>
        <member name="F:Plugin.Iconize.IconToolbarItem.IconColorProperty">
            <summary>
            Backing store for the <see cref="P:Plugin.Iconize.IconToolbarItem.IconColor" /> property.
            </summary>
        </member>
        <member name="F:Plugin.Iconize.IconToolbarItem.IsVisibleProperty">
            <summary>
            Backing store for the <see cref="P:Plugin.Iconize.IconToolbarItem.IsVisible" /> property.
            </summary>
        </member>
        <member name="P:Plugin.Iconize.IconToolbarItem.IconColor">
            <summary>
            Gets or sets the color of the icon.
            </summary>
            <value>
            The color of the icon.
            </value>
        </member>
        <member name="P:Plugin.Iconize.IconToolbarItem.IsVisible">
            <summary>
            Gets or sets a value indicating whether this toolbar item is visible.
            </summary>
            <value>
            <c>true</c> if this toolbar item is visible; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="M:Plugin.Iconize.IconToolbarItem.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Plugin.Iconize.IconToolbarItem" /> class.
            </summary>
        </member>
        <member name="M:Plugin.Iconize.IconToolbarItem.OnCanExecuteChanged(System.Object,System.EventArgs)">
            <summary>
            Called when [can execute changed].
            </summary>
            <param name="sender">The sender.</param>
            <param name="e">The <see cref="T:System.EventArgs"/> instance containing the event data.</param>
        </member>
        <member name="M:Plugin.Iconize.IconToolbarItem.OnPropertyChanged(System.Object,System.ComponentModel.PropertyChangedEventArgs)">
            <summary>
            Called when [property changed].
            </summary>
            <param name="sender">The sender.</param>
            <param name="e">The <see cref="T:System.ComponentModel.PropertyChangedEventArgs"/> instance containing the event data.</param>
        </member>
        <member name="T:Plugin.Iconize.IconDrawable">
            <summary>
            Defines the <see cref="T:Plugin.Iconize.IconDrawable" /> drawable.
            </summary>
            <seealso cref="T:Android.Graphics.Drawables.Drawable" />
        </member>
        <member name="F:Plugin.Iconize.IconDrawable.ANDROID_ACTIONBAR_ICON_SIZE_DP">
            <summary>
            The android actionbar icon size dp
            </summary>
        </member>
        <member name="P:Plugin.Iconize.IconDrawable.IntrinsicHeight">
            <inheritdoc />
        </member>
        <member name="P:Plugin.Iconize.IconDrawable.IntrinsicWidth">
            <inheritdoc />
        </member>
        <member name="P:Plugin.Iconize.IconDrawable.IsStateful">
            <inheritdoc />
        </member>
        <member name="P:Plugin.Iconize.IconDrawable.Opacity">
            <inheritdoc />
        </member>
        <member name="M:Plugin.Iconize.IconDrawable.#ctor(Android.Content.Context,System.String)">
            <summary>
            Create an <see cref="T:Plugin.Iconize.IconDrawable" />.
            </summary>
            <param name="context">Your activity or application context.</param>
            <param name="iconKey">The icon key you want this drawable to display.</param>
            <exception cref="T:System.ArgumentException">If the key doesn't match any icon.</exception>
        </member>
        <member name="M:Plugin.Iconize.IconDrawable.#ctor(Android.Content.Context,Plugin.Iconize.IIcon)">
            <summary>
            Create an <see cref="T:Plugin.Iconize.IconDrawable" />.
            </summary>
            <param name="context">Your activity or application context.</param>
            <param name="icon">The icon you want this drawable to display.</param>
        </member>
        <member name="M:Plugin.Iconize.IconDrawable.ActionBarSize">
            <summary>
            Set the size of this icon to the standard Android ActionBar.
            </summary>
            <returns>The current IconDrawable for chaining.</returns>
        </member>
        <member name="M:Plugin.Iconize.IconDrawable.SizeRes(System.Int32)">
            <summary>
            Set the size of the drawable.
            </summary>
            <param name="dimenRes">The dimension resource.</param>
            <returns>The current IconDrawable for chaining.</returns>
        </member>
        <member name="M:Plugin.Iconize.IconDrawable.SizeDp(System.Int32)">
            <summary>
            Set the size of the drawable.
            </summary>
            <param name="size">The size in density-independent pixels (dp).</param>
            <returns>The current IconDrawable for chaining.</returns>
        </member>
        <member name="M:Plugin.Iconize.IconDrawable.SizePx(System.Int32)">
            <summary>
            Set the size of the drawable.
            </summary>
            <param name="size">The size in pixels (px).</param>
            <returns>The current IconDrawable for chaining.</returns>
        </member>
        <member name="M:Plugin.Iconize.IconDrawable.Color(System.Int32)">
            <summary>
            Set the color of the drawable.
            </summary>
            <param name="color">The color, usually from android.graphics.Color or 0xFF012345.</param>
            <returns>The current IconDrawable for chaining.</returns>
        </member>
        <member name="M:Plugin.Iconize.IconDrawable.ColorRes(System.Int32)">
            <summary>
            Set the color of the drawable.
            </summary>
            <param name="colorRes">The color resource, from your R file.</param>
            <returns>The current IconDrawable for chaining.</returns>
        </member>
        <member name="M:Plugin.Iconize.IconDrawable.Alpha(System.Int32)">
            <summary>
            Set the alpha of this drawable.
            </summary>
            <param name="alpha">The alpha, between 0 (transparent) and 255 (opaque).</param>
            <returns>The current IconDrawable for chaining.</returns>
        </member>
        <member name="M:Plugin.Iconize.IconDrawable.ClearColorFilter">
            <inheritdoc />
        </member>
        <member name="M:Plugin.Iconize.IconDrawable.Draw(Android.Graphics.Canvas)">
            <inheritdoc />
        </member>
        <member name="M:Plugin.Iconize.IconDrawable.SetState(System.Int32[])">
            <inheritdoc />
        </member>
        <member name="M:Plugin.Iconize.IconDrawable.SetAlpha(System.Int32)">
            <inheritdoc />
        </member>
        <member name="M:Plugin.Iconize.IconDrawable.SetColorFilter(Android.Graphics.ColorFilter)">
            <inheritdoc />
        </member>
        <member name="M:Plugin.Iconize.IconDrawable.SetTint(System.Int32)">
            <inheritdoc />
        </member>
        <member name="M:Plugin.Iconize.IconDrawable.SetTintList(Android.Content.Res.ColorStateList)">
            <inheritdoc />
        </member>
        <member name="M:Plugin.Iconize.IconDrawable.ConvertDpToPx(Android.Content.Context,System.Single)">
            <summary>
            Converts the dp to px.
            </summary>
            <param name="context">The context.</param>
            <param name="dp">The dp.</param>
            <returns></returns>
        </member>
        <member name="M:Plugin.Iconize.IconDrawable.SetStyle(Android.Graphics.Paint.Style)">
            <summary>
            Sets paint style.
            </summary>
            <param name="style">The style to be applied.</param>
        </member>
        <member name="M:Plugin.Iconize.IconDrawable.IsEnabled(System.Int32[])">
            <summary>
            Determines whether the specified state set is enabled.
            </summary>
            <param name="stateSet">The state set.</param>
            <returns></returns>
        </member>
        <member name="T:Plugin.Iconize.MenuClickListener">
            <summary>
            Defines the <see cref="T:Plugin.Iconize.MenuClickListener" /> type.
            </summary>
            <seealso cref="T:Java.Lang.Object" />
            <seealso cref="T:Android.Views.IMenuItemOnMenuItemClickListener" />
            <seealso cref="T:Android.Runtime.IJavaObject" />
            <seealso cref="T:System.IDisposable" />
        </member>
        <member name="M:Plugin.Iconize.MenuClickListener.#ctor(System.Action)">
            <summary>
            Initializes a new instance of the <see cref="T:Plugin.Iconize.MenuClickListener"/> class.
            </summary>
            <param name="callback">The callback.</param>
        </member>
        <member name="M:Plugin.Iconize.MenuClickListener.OnMenuItemClick(Android.Views.IMenuItem)">
            <summary>
            Called when a menu item has been invoked.
            </summary>
            <param name="item">The menu item that was invoked.</param>
            <returns>
            To be added.
            </returns>
            <remarks>
            <para tool="javadoc-to-mdoc">Called when a menu item has been invoked.  This is the first code
            that is executed; if it returns true, no other callbacks will be
            executed.</para>
            <para tool="javadoc-to-mdoc">
              <format type="text/html">
                <a href="http://developer.android.com/reference/android/view/MenuItem.OnMenuItemClickListener.html#onMenuItemClick(android.view.MenuItem)" target="_blank">[Android Documentation]</a>
              </format>
            </para>
            </remarks>
            <since version="Added in API level 1" />
        </member>
        <member name="T:Plugin.Iconize.PlatformExtensions">
            <summary>
            Defines the <see cref="T:Plugin.Iconize.PlatformExtensions" /> extensions.
            </summary>
        </member>
        <member name="M:Plugin.Iconize.PlatformExtensions.ToBitmap(Android.Graphics.Drawables.Drawable)">
            <summary>
            To the bitmap.
            </summary>
            <param name="drawable">The drawable.</param>
            <returns></returns>
        </member>
        <member name="M:Plugin.Iconize.PlatformExtensions.ToTypeface(Plugin.Iconize.IIconModule,Android.Content.Context)">
            <summary>
            To the typeface.
            </summary>
            <param name="module">The module.</param>
            <param name="context">The context.</param>
            <returns></returns>
        </member>
        <member name="M:Plugin.Iconize.PlatformExtensions.GetToolbarItemDrawable(Xamarin.Forms.ToolbarItem,Android.Content.Context)">
            <summary>
            Gets the toolbar item drawable.
            </summary>
            <param name="toolbarItem">The toolbar item.</param>
            <param name="context">The context.</param>
            <returns></returns>
        </member>
        <member name="T:Plugin.Iconize.IconButtonRenderer">
            <seealso cref="T:Xamarin.Forms.Platform.Android.AppCompat.ButtonRenderer" />
        </member>
        <member name="P:Plugin.Iconize.IconButtonRenderer.Button">
            <summary>
            Gets the button.
            </summary>
            <value>
            The button.
            </value>
        </member>
        <member name="M:Plugin.Iconize.IconButtonRenderer.#ctor(Android.Content.Context)">
            <summary>
            Initializes a new instance of the <see cref="T:Plugin.Iconize.IconButtonRenderer"/> class.
            </summary>
            <param name="context">The context.</param>
        </member>
        <member name="M:Plugin.Iconize.IconButtonRenderer.OnElementChanged(Xamarin.Forms.Platform.Android.ElementChangedEventArgs{Xamarin.Forms.Button})">
            <inheritdoc />
        </member>
        <member name="M:Plugin.Iconize.IconButtonRenderer.OnElementPropertyChanged(System.Object,System.ComponentModel.PropertyChangedEventArgs)">
            <inheritdoc />
        </member>
        <member name="M:Plugin.Iconize.IconButtonRenderer.OnAttachedToWindow">
            <inheritdoc />
        </member>
        <member name="M:Plugin.Iconize.IconButtonRenderer.OnDetachedFromWindow">
            <inheritdoc />
        </member>
        <member name="T:Plugin.Iconize.IconImageRenderer">
            <seealso cref="T:Xamarin.Forms.Platform.Android.ImageRenderer" />
        </member>
        <member name="P:Plugin.Iconize.IconImageRenderer.Image">
            <summary>
            Gets the image.
            </summary>
            <value>
            The image.
            </value>
        </member>
        <member name="M:Plugin.Iconize.IconImageRenderer.#ctor(Android.Content.Context)">
            <summary>
            Initializes a new instance of the <see cref="T:Plugin.Iconize.IconImageRenderer"/> class.
            </summary>
            <param name="context">The context.</param>
        </member>
        <member name="M:Plugin.Iconize.IconImageRenderer.OnElementChanged(Xamarin.Forms.Platform.Android.ElementChangedEventArgs{Xamarin.Forms.Image})">
            <inheritdoc />
        </member>
        <member name="M:Plugin.Iconize.IconImageRenderer.OnElementPropertyChanged(System.Object,System.ComponentModel.PropertyChangedEventArgs)">
            <inheritdoc />
        </member>
        <member name="T:Plugin.Iconize.IconLabelRenderer">
            <seealso cref="T:Xamarin.Forms.Platform.Android.LabelRenderer" />
        </member>
        <member name="P:Plugin.Iconize.IconLabelRenderer.Label">
            <summary>
            Gets the label.
            </summary>
            <value>
            The label.
            </value>
        </member>
        <member name="M:Plugin.Iconize.IconLabelRenderer.#ctor(Android.Content.Context)">
            <summary>
            Initializes a new instance of the <see cref="T:Plugin.Iconize.IconLabelRenderer"/> class.
            </summary>
            <param name="context">The context.</param>
        </member>
        <member name="M:Plugin.Iconize.IconLabelRenderer.OnElementChanged(Xamarin.Forms.Platform.Android.ElementChangedEventArgs{Xamarin.Forms.Label})">
            <inheritdoc />
        </member>
        <member name="M:Plugin.Iconize.IconLabelRenderer.OnElementPropertyChanged(System.Object,System.ComponentModel.PropertyChangedEventArgs)">
            <inheritdoc />
        </member>
        <member name="M:Plugin.Iconize.IconLabelRenderer.OnAttachedToWindow">
            <inheritdoc />
        </member>
        <member name="M:Plugin.Iconize.IconLabelRenderer.OnDetachedFromWindow">
            <inheritdoc />
        </member>
        <member name="T:Plugin.Iconize.IconNavigationRenderer">
            <summary>
            Defines the <see cref="T:Plugin.Iconize.IconNavigationPage" /> renderer.
            </summary>
            <seealso cref="T:Xamarin.Forms.Platform.Android.AppCompat.NavigationPageRenderer" />
        </member>
        <member name="M:Plugin.Iconize.IconNavigationRenderer.#ctor(Android.Content.Context)">
            <summary>
            Initializes a new instance of the <see cref="T:Plugin.Iconize.IconNavigationRenderer"/> class.
            </summary>
            <param name="context">The context.</param>
        </member>
        <member name="M:Plugin.Iconize.IconNavigationRenderer.OnToolbarItemPropertyChanged(System.Object,System.ComponentModel.PropertyChangedEventArgs)">
            <inheritdoc />
        </member>
        <member name="M:Plugin.Iconize.IconNavigationRenderer.UpdateMenuItemIcon(Android.Content.Context,Android.Views.IMenuItem,Xamarin.Forms.ToolbarItem)">
            <inheritdoc />
        </member>
        <member name="T:Plugin.Iconize.IconTabbedPageRenderer">
            <summary>
            Defines the <see cref="T:Plugin.Iconize.IconTabbedPage" /> renderer.
            </summary>
            <seealso cref="T:Xamarin.Forms.Platform.Android.AppCompat.TabbedPageRenderer" />
        </member>
        <member name="M:Plugin.Iconize.IconTabbedPageRenderer.#ctor(Android.Content.Context)">
            <summary>
            Initializes a new instance of the <see cref="T:Plugin.Iconize.IconTabbedPageRenderer"/> class.
            </summary>
            <param name="context">The context.</param>
        </member>
        <member name="M:Plugin.Iconize.IconTabbedPageRenderer.GetIconDrawable(Xamarin.Forms.FileImageSource)">
            <inheritdoc />
        </member>
    </members>
</doc>
